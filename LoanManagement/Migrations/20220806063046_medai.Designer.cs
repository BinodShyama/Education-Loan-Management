// <auto-generated />
using System;
using LoanManagement.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoanManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220806063046_medai")]
    partial class medai
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LoanManagement.Domain.Entities.ChequeLayout", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.Property<double>("XAmount")
                        .HasColumnType("float");

                    b.Property<double>("XAmountInWordLine1")
                        .HasColumnType("float");

                    b.Property<double>("XAmountInWordLine2")
                        .HasColumnType("float");

                    b.Property<double>("XDate")
                        .HasColumnType("float");

                    b.Property<double>("XPayee")
                        .HasColumnType("float");

                    b.Property<double>("YAmount")
                        .HasColumnType("float");

                    b.Property<double>("YAmountInWordLine1")
                        .HasColumnType("float");

                    b.Property<double>("YAmountInWordLine2")
                        .HasColumnType("float");

                    b.Property<double>("YDate")
                        .HasColumnType("float");

                    b.Property<double>("YPayee")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ChequeLayout");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.Districts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("District");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.LoanCollection", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("ChequeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChequeDate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("DateNep")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LoanAc")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MemberLoanDetailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("MemberLoanDetailId");

                    b.ToTable("LoanCollection");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.LoanCollectionDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LoanCollectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LoanCollectionId");

                    b.ToTable("LoanCollectionDetail");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.LoanDisbrusement", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("ChequeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChequeDate")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("LoanAc")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MemberLoanDetailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("VoucherDateNep")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("MemberLoanDetailId");

                    b.ToTable("LoanDisbrusement");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.LoanDisbrusementDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DisbrusementId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InstallmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DisbrusementId");

                    b.HasIndex("InstallmentId");

                    b.ToTable("LoanDisbrusementDetail");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.Media", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.Member", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BirthOfDateAD")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("BirthofDateBS")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CitizenIssuedDateAD")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("CitizenIssuedDateBS")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CitizenIssuedDistrict")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CitizenShipNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<int?>("CustomMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FatherFullName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("GrandFatherFullName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MotherFullName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NationalIdentiryCardNumber")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentDistrict")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PermanentHouseNo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PermanentMunicipality")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PermanentState")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PermanentStreet")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PermanentWardNumber")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("SpouseFullName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TemporaryDistrict")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TemporaryHouseNo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TemporaryMunicipality")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TemporaryState")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TemporaryStreet")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TemporaryWardNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.MemberLoanDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<DateTime>("DateOfCommencement")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("DateOfCommencementNep")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Degree")
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal>("Duration")
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal>("Installment1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Installment2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Installment3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Institution")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LoanAccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LoanGuarantorCitizenshipIssueDistrict")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LoanGuarantorCitizenshipNo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LoanGuarantorContactNo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LoanGuarantorName")
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LoanGuarantorRelationship")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LoanMaturityDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("LoanMaturityDateNep")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SerialNo")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("University")
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId")
                        .IsUnique()
                        .HasFilter("[MemberId] IS NOT NULL");

                    b.ToTable("MemberLoanDetail");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.MemberLoanInstallment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<bool>("Disbrused")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DisbrusedDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<int>("InstallmentNo")
                        .HasColumnType("int");

                    b.Property<string>("LoanAcNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberLoanDetailId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MemberLoanDetailId");

                    b.ToTable("MemberLoanInstallment");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.Municipalities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DistrinctId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistrinctId")
                        .IsUnique();

                    b.ToTable("Municipality");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.Permission", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermissionGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.PermissionGroup", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PermissionGroup");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.Provinces", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.RolePermission", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PermissionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermission");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("FisicalYearId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Particular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("VoucherDateNep")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VoucherIndex")
                        .HasColumnType("int");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.TransactionDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("CrAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<decimal>("DrAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FisicalYearId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Particular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(3)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransactionDetail");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserToken");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.Districts", b =>
                {
                    b.HasOne("LoanManagement.Domain.Entities.Provinces", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.LoanCollection", b =>
                {
                    b.HasOne("LoanManagement.Domain.Entities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.HasOne("LoanManagement.Domain.Entities.MemberLoanDetail", "MemberLoanDetail")
                        .WithMany()
                        .HasForeignKey("MemberLoanDetailId");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.LoanCollectionDetail", b =>
                {
                    b.HasOne("LoanManagement.Domain.Entities.LoanCollection", "LoanCollection")
                        .WithMany("LoanCollectionDetail")
                        .HasForeignKey("LoanCollectionId");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.LoanDisbrusement", b =>
                {
                    b.HasOne("LoanManagement.Domain.Entities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.HasOne("LoanManagement.Domain.Entities.MemberLoanDetail", "MemberLoanDetail")
                        .WithMany()
                        .HasForeignKey("MemberLoanDetailId");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.LoanDisbrusementDetail", b =>
                {
                    b.HasOne("LoanManagement.Domain.Entities.LoanDisbrusement", "LoanDisbrusement")
                        .WithMany("LoanDisbrusementDetail")
                        .HasForeignKey("DisbrusementId");

                    b.HasOne("LoanManagement.Domain.Entities.MemberLoanInstallment", "MemberLoanInstallment")
                        .WithMany()
                        .HasForeignKey("InstallmentId");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.MemberLoanDetail", b =>
                {
                    b.HasOne("LoanManagement.Domain.Entities.Member", null)
                        .WithOne("MemberLoan")
                        .HasForeignKey("LoanManagement.Domain.Entities.MemberLoanDetail", "MemberId");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.MemberLoanInstallment", b =>
                {
                    b.HasOne("LoanManagement.Domain.Entities.MemberLoanDetail", null)
                        .WithMany("Installments")
                        .HasForeignKey("MemberLoanDetailId");
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.Municipalities", b =>
                {
                    b.HasOne("LoanManagement.Domain.Entities.Districts", "District")
                        .WithOne("Municipality")
                        .HasForeignKey("LoanManagement.Domain.Entities.Municipalities", "DistrinctId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.RolePermission", b =>
                {
                    b.HasOne("LoanManagement.Domain.Entities.Permission", "Permission")
                        .WithMany("RolePermission")
                        .HasForeignKey("PermissionId");

                    b.HasOne("LoanManagement.Domain.Entities.Role", "Role")
                        .WithMany("RolePermission")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanManagement.Domain.Entities.TransactionDetail", b =>
                {
                    b.HasOne("LoanManagement.Domain.Entities.Transaction", null)
                        .WithMany("TransactionDetail")
                        .HasForeignKey("TransactionId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("LoanManagement.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LoanManagement.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LoanManagement.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("LoanManagement.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoanManagement.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LoanManagement.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
